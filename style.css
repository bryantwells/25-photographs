/* GENERAL */

::selection { color: black; }

* { box-sizing: border-box; }

:root {
    --line-height: 1.2;
    --sm-padding: calc(var(--line-height) / 2rem);
    --md-padding: calc(var(--line-height) * 1rem);
    --lg-padding: calc(var(--line-height) * 2rem);
}

html {
    font-size: 30px;
    font-family: Arial, Helvetica, sans-serif;
    letter-spacing: 0.04rem;
    line-height: var(--line-height);
    -webkit-text-stroke: 0.03rem;
}

body {
    margin: 0;
    margin: auto;
}

h1, h2 {
    font-size: unset;
    font-weight: unset;
    margin: 0;
}

dl {
    margin: 0;
}

dd {
    margin: 0;
}
dd:not(:last-of-type) {
    margin-bottom: var(--line-height);
}

p {
    margin: 0;
}
p:not(:first-child) {
    text-indent: 5ch;
}

a {
    color: unset;
    text-decoration-thickness: 0.12rem;
}
a:hover {
    text-decoration: none;
}

/* PROMPT */

.Prompt {
    padding: var(--lg-padding) var(--md-padding);
    /* font-family: times, serif; */
    color: rgb(30, 165, 0);
    text-align: center;
    counter-increment: prompt;
}

.Prompt-text::before {
    content: counter(prompt);
    display: block;
}

/* META */

.Meta {
    padding: var(--lg-padding) var(--md-padding);
}

.Meta-header {
    text-align: center;
    cursor: pointer;
}
.Meta-header:hover, .Meta.is-expanded .Meta-header {
    text-transform: uppercase;
}

.Meta-body {
    display: none;
}

.Meta.is-expanded .Meta-body {
    display: block;
}

/* LAYOUT */

main {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-auto-flow: row;
}

.Meta {
    order: 1;
    grid-column: 3 / 4;
}
.Meta.is-expanded {
    grid-column: 2 / 5;
}

.Meta--header {
    grid-row: 2 / 3;
}
.Meta--header.is-expanded {
    grid-row: 2 / 4;
}

.Meta--faq {
    grid-row: 4 / 5;
}
.Meta--faq.is-expanded {
    grid-row: 4 / 9;
}

.Meta--footer {
    grid-row: 6 / 7;
}
.Meta--faq.is-expanded ~ .Meta--footer {
    grid-row: 9 / 10;
}

@media screen and (max-width: 1000px) {

    main {
        grid-template-columns: repeat(2, 1fr);
    }

    .Meta-body {
        display: block;
    }

    .Meta {
        padding: var(--md-padding);
        grid-row: unset !important;
        grid-column: 1 / 3 !important;
    }

    .Prompt {
        padding: var(--md-padding);
    }

    .Meta--header, .Meta--header.is-expanded {
        order: -1;
    }
}